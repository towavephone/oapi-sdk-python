# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .patch_tag import PatchTag


class PatchTagRequestBody(object):
    _types = {
        "patch_tag": PatchTag,
    }

    def __init__(self, d=None):
        self.patch_tag: Optional[PatchTag] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "PatchTagRequestBodyBuilder":
        return PatchTagRequestBodyBuilder()


class PatchTagRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._patch_tag_request_body = PatchTagRequestBody()

    def patch_tag(self, patch_tag: PatchTag) -> "PatchTagRequestBodyBuilder":
        self._patch_tag_request_body.patch_tag = patch_tag
        return self

    def build(self) -> "PatchTagRequestBody":
        return self._patch_tag_request_body
