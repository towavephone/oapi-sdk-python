# Code generated by Lark OpenAPI.

from typing import Any, Optional, Union, Dict, List, Set, IO, Callable, Type
from lark_oapi.core.construct import init
from .create_tag import CreateTag


class CreateTagRequestBody(object):
    _types = {
        "create_tag": CreateTag,
    }

    def __init__(self, d=None):
        self.create_tag: Optional[CreateTag] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "CreateTagRequestBodyBuilder":
        return CreateTagRequestBodyBuilder()


class CreateTagRequestBodyBuilder(object):
    def __init__(self) -> None:
        self._create_tag_request_body = CreateTagRequestBody()

    def create_tag(self, create_tag: CreateTag) -> "CreateTagRequestBodyBuilder":
        self._create_tag_request_body.create_tag = create_tag
        return self

    def build(self) -> "CreateTagRequestBody":
        return self._create_tag_request_body
