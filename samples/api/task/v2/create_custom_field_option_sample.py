# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.task.v2 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: CreateCustomFieldOptionRequest = CreateCustomFieldOptionRequest.builder() \
        .custom_field_guid("b13adf3c-cad6-4e02-8929-550c112b5633") \
        .request_body(InputOption.builder()
                      .name("高优")
                      .color_index(10)
                      .insert_before("2bd905f8-ef38-408b-aa1f-2b2ad33b2913")
                      .insert_after("b13adf3c-cad6-4e02-8929-550c112b5633")
                      .is_hidden(False)
                      .build()) \
        .build()

    # 发起请求
    response: CreateCustomFieldOptionResponse = client.task.v2.custom_field_option.create(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.task.v2.custom_field_option.create failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


# 异步方式
async def amain():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: CreateCustomFieldOptionRequest = CreateCustomFieldOptionRequest.builder() \
        .custom_field_guid("b13adf3c-cad6-4e02-8929-550c112b5633") \
        .request_body(InputOption.builder()
                      .name("高优")
                      .color_index(10)
                      .insert_before("2bd905f8-ef38-408b-aa1f-2b2ad33b2913")
                      .insert_after("b13adf3c-cad6-4e02-8929-550c112b5633")
                      .is_hidden(False)
                      .build()) \
        .build()

    # 发起请求
    response: CreateCustomFieldOptionResponse = await client.task.v2.custom_field_option.acreate(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.task.v2.custom_field_option.acreate failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    # asyncio.run(amain()) 异步方式
    main()
