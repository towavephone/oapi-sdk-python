# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.approval.v4 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: CreateInstanceRequest = CreateInstanceRequest.builder() \
        .request_body(InstanceCreate.builder()
                      .approval_code("7C468A54-8745-2245-9675-08B7C63E7A85")
                      .user_id("f7cb567e")
                      .open_id("ou_123456")
                      .department_id("123456")
                      .form("")
                      .node_approver_user_id_list([])
                      .node_approver_open_id_list([])
                      .node_cc_user_id_list([])
                      .node_cc_open_id_list([])
                      .uuid("XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX")
                      .allow_resubmit(True)
                      .allow_submit_again(True)
                      .cancel_bot_notification("0")
                      .forbid_revoke(False)
                      .i18n_resources([])
                      .title("@i18n@1")
                      .title_display_method(0)
                      .node_auto_approval_list([])
                      .build()) \
        .build()

    # 发起请求
    response: CreateInstanceResponse = client.approval.v4.instance.create(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.approval.v4.instance.create failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


# 异步方式
async def amain():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: CreateInstanceRequest = CreateInstanceRequest.builder() \
        .request_body(InstanceCreate.builder()
                      .approval_code("7C468A54-8745-2245-9675-08B7C63E7A85")
                      .user_id("f7cb567e")
                      .open_id("ou_123456")
                      .department_id("123456")
                      .form("")
                      .node_approver_user_id_list([])
                      .node_approver_open_id_list([])
                      .node_cc_user_id_list([])
                      .node_cc_open_id_list([])
                      .uuid("XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX")
                      .allow_resubmit(True)
                      .allow_submit_again(True)
                      .cancel_bot_notification("0")
                      .forbid_revoke(False)
                      .i18n_resources([])
                      .title("@i18n@1")
                      .title_display_method(0)
                      .node_auto_approval_list([])
                      .build()) \
        .build()

    # 发起请求
    response: CreateInstanceResponse = await client.approval.v4.instance.acreate(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.approval.v4.instance.acreate failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    # asyncio.run(amain()) 异步方式
    main()
