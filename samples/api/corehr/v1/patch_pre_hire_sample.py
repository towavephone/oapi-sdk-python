# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.corehr.v1 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: PatchPreHireRequest = PatchPreHireRequest.builder() \
        .pre_hire_id("1616161616") \
        .client_token("12454646") \
        .request_body(PreHire.builder()
                      .ats_application_id("4719168654814483759")
                      .hire_date("2020-01-01")
                      .employee_type(Enum.builder().build())
                      .worker_id("1245646")
                      .employee_type_id("正式")
                      .person_id("656464648662")
                      .custom_fields([])
                      .cost_center_rate([])
                      .onboarding_status(Enum.builder().build())
                      .build()) \
        .build()

    # 发起请求
    response: PatchPreHireResponse = client.corehr.v1.pre_hire.patch(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.corehr.v1.pre_hire.patch failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


# 异步方式
async def amain():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: PatchPreHireRequest = PatchPreHireRequest.builder() \
        .pre_hire_id("1616161616") \
        .client_token("12454646") \
        .request_body(PreHire.builder()
                      .ats_application_id("4719168654814483759")
                      .hire_date("2020-01-01")
                      .employee_type(Enum.builder().build())
                      .worker_id("1245646")
                      .employee_type_id("正式")
                      .person_id("656464648662")
                      .custom_fields([])
                      .cost_center_rate([])
                      .onboarding_status(Enum.builder().build())
                      .build()) \
        .build()

    # 发起请求
    response: PatchPreHireResponse = await client.corehr.v1.pre_hire.apatch(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.corehr.v1.pre_hire.apatch failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    # asyncio.run(amain()) 异步方式
    main()
