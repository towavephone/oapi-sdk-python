# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.admin.v1 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: UpdateBadgeGrantRequest = UpdateBadgeGrantRequest.builder() \
        .badge_id("m_DjMzaK") \
        .grant_id("g_uS4yux") \
        .user_id_type("open_id") \
        .department_id_type("open_department_id") \
        .request_body(Grant.builder()
                      .name("激励勋章的授予名单")
                      .grant_type(0)
                      .time_zone("Asia/Shanghai")
                      .rule_detail(RuleDetail.builder().build())
                      .is_grant_all(False)
                      .user_ids([])
                      .department_ids([])
                      .group_ids([])
                      .build()) \
        .build()

    # 发起请求
    response: UpdateBadgeGrantResponse = client.admin.v1.badge_grant.update(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.admin.v1.badge_grant.update failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


# 异步方式
async def amain():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: UpdateBadgeGrantRequest = UpdateBadgeGrantRequest.builder() \
        .badge_id("m_DjMzaK") \
        .grant_id("g_uS4yux") \
        .user_id_type("open_id") \
        .department_id_type("open_department_id") \
        .request_body(Grant.builder()
                      .name("激励勋章的授予名单")
                      .grant_type(0)
                      .time_zone("Asia/Shanghai")
                      .rule_detail(RuleDetail.builder().build())
                      .is_grant_all(False)
                      .user_ids([])
                      .department_ids([])
                      .group_ids([])
                      .build()) \
        .build()

    # 发起请求
    response: UpdateBadgeGrantResponse = await client.admin.v1.badge_grant.aupdate(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.admin.v1.badge_grant.aupdate failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    # asyncio.run(amain()) 异步方式
    main()
