# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.application.v6 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: ListApplicationFeedbackRequest = ListApplicationFeedbackRequest.builder() \
        .app_id("cli_9f115af860f7901b") \
        .from_date("2022-01-30") \
        .to_date("2022-01-30") \
        .feedback_type(1) \
        .status(0) \
        .user_id_type("open_id") \
        .page_token("") \
        .page_size(100) \
        .build()

    # 发起请求
    response: ListApplicationFeedbackResponse = client.application.v6.application_feedback.list(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.application.v6.application_feedback.list failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


# 异步方式
async def amain():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: ListApplicationFeedbackRequest = ListApplicationFeedbackRequest.builder() \
        .app_id("cli_9f115af860f7901b") \
        .from_date("2022-01-30") \
        .to_date("2022-01-30") \
        .feedback_type(1) \
        .status(0) \
        .user_id_type("open_id") \
        .page_token("") \
        .page_size(100) \
        .build()

    # 发起请求
    response: ListApplicationFeedbackResponse = await client.application.v6.application_feedback.alist(request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.application.v6.application_feedback.alist failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    # asyncio.run(amain()) 异步方式
    main()
