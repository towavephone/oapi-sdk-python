# Code generated by Lark OpenAPI.

import lark_oapi as lark
from lark_oapi.api.application.v6 import *


def main():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: ContactsRangeSuggestApplicationAppVersionRequest = ContactsRangeSuggestApplicationAppVersionRequest.builder() \
        .app_id("cli_9f3ca975326b501b") \
        .version_id("oav_d317f090b7258ad0372aa53963cda70d") \
        .department_id_type("open_department_id") \
        .user_id_type("user_id") \
        .build()

    # 发起请求
    response: ContactsRangeSuggestApplicationAppVersionResponse = client.application.v6.application_app_version.contacts_range_suggest(
        request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.application.v6.application_app_version.contacts_range_suggest failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


# 异步方式
async def amain():
    # 创建client
    client = lark.Client.builder() \
        .app_id(lark.APP_ID) \
        .app_secret(lark.APP_SECRET) \
        .log_level(lark.LogLevel.DEBUG) \
        .build()

    # 构造请求对象
    request: ContactsRangeSuggestApplicationAppVersionRequest = ContactsRangeSuggestApplicationAppVersionRequest.builder() \
        .app_id("cli_9f3ca975326b501b") \
        .version_id("oav_d317f090b7258ad0372aa53963cda70d") \
        .department_id_type("open_department_id") \
        .user_id_type("user_id") \
        .build()

    # 发起请求
    response: ContactsRangeSuggestApplicationAppVersionResponse = await client.application.v6.application_app_version.acontacts_range_suggest(
        request)

    # 处理失败返回
    if not response.success():
        lark.logger.error(
            f"client.application.v6.application_app_version.acontacts_range_suggest failed, code: {response.code}, msg: {response.msg}, log_id: {response.get_log_id()}")
        return

    # 处理业务结果
    lark.logger.info(lark.JSON.marshal(response.data, indent=4))


if __name__ == "__main__":
    # asyncio.run(amain()) 异步方式
    main()
